#!/usr/bin/env bash

# aws-list - lists info for EC2 instances
#
#    from: aws-quick-cli
#          https://github.com/robertpeteuil/aws-quick-cli
#
#  Author: Robert Peteuil   @RobertPeteuil
#

scriptname="aws-list"
scriptbuildnum="1.0.0"
scriptbuilddate="2017-04-11"

# source aws-quick-cli init files to add color and display_ver function
if [[ $(which aws-quick-cli-init.sh) ]]; then
  . aws-quick-cli-init.sh
else
  echo "Error - required init file not found"
  exit 1
fi

############################################################
###   VAR INITS

if [ -n "$AWS_DEFAULT_REGION" ]; then
  OutputAddendum=" in ${CLRheading2}${AWS_DEFAULT_REGION}${CLRnormal}"
fi

############################################################
###   FUNCTIONS

display_help_text() {
  display_ver
  echo
  echo -e "${CLRtitle}list status and information for AWS EC2 instances"
  echo
  echo -e "${CLRtitle}USAGE: ${CLRnormal}${scriptname} ${CLRtitle2}(none)${CLRnormal}|${CLRtitle2} instance-name ${CLRnormal}| ${CLRtitle2}-s ${CLRnormal}|${CLRtitle2} -r ${CLRnormal} [OPTIONS]\n"
  echo -e "${CLRtitle}SELECT LIST TYPE:${CLRnormal}"
  echo -e "${CLRtitle2}       (none)\t${CLRnormal}: list all instances"
  echo -e "${CLRtitle2}instance-name\t${CLRnormal}: info for a specific instance"
  echo -e "${CLRtitle2}           -s\t${CLRnormal}: list stopped instances"
  echo -e "${CLRtitle2}           -r\t${CLRnormal}: list running instances"
  echo -e "${CLRtitle}\t OPTIONS:${CLRnormal}"
  echo -e "${CLRtitle2}           -d\t${CLRnormal}: debug mode"
  echo -e "${CLRtitle2}           -v\t${CLRnormal}: display version info"
  echo -e "${CLRtitle2}           -h\t${CLRnormal}: display help info"
  echo
  exit 0
}

######################################################################
###   EXECUTION STARTS HERE

# Parse List-Type
if [[ "$1" == "" ]]; then
  filters=""
  OutputText="All Instances"
elif [[ ${1:0:1} != "-" ]]; then
  InstanceName="$1"
  filters="--filters Name=tag:Name,Values=${InstanceName}"
  OutputText="Instances '${InstanceName}'"
  shift
elif [[ "$1" == "-s" ]]; then
  filters="--filters Name=instance-state-name,Values=stopped"
  OutputText="Stopped EC2 Instances"
  shift
elif [[ "$1" == "-r" ]]; then
  filters="--filters Name=instance-state-name,Values=running"
  OutputText="Running EC2 Instances"
  shift
fi

# Parse OPTIONS
for arg in "$@"; do
  case "$arg" in
    -h)   display_help_text ;;
    -v)   display_ver; exit ;;
    -d)   debugmode=true; shift ;;
    *)    echo -e "invalid paramter\n"; display_help_text ;;
  esac
done

# Get all instance data items
InstanceData=($(aws ec2 describe-instances ${filters} --query 'Reservations[*].Instances[].[InstanceId,ImageId,State.Name,Tags[?Key==`Name`].Value]' --output text))
numberDataRecords=4

numberInstances=$(( ${#InstanceData[@]} / numberDataRecords ))

[[ "$debugmode" ]] && echo -e "# instances found: $numberInstances \t total items collected: ${#InstanceData[@]}\t items per instance: $numberDataRecords\t "

if [ ${#InstanceData[@]} -ne 0 ]; then
  echo -e "\n${OutputText}${OutputAddendum}:\n"

  for (( j=0; j<${#InstanceData[@]}; j=j+numberDataRecords )); do

    InstanceId=${InstanceData[$j]}
    ImageAMI=${InstanceData[$j+1]}
    InstanceStatus=${InstanceData[$j+2]}
    InstanceName=${InstanceData[$j+3]}

    ImageDescription=($(aws ec2 describe-images --image-ids "${ImageAMI}" --query 'Images[*].{Name:Name}' --output text))

    case ${InstanceStatus} in
      running)    CLRstatus=${CLRsuccess} ;;
      stopped)    CLRstatus=${CLRerror} ;;
      stopping)   CLRstatus=${CLRwarning} ;;
      pending)    CLRstatus=${CLRwarning} ;;
      starting)   CLRstatus=${CLRwarning} ;;
      *)          CLRstatus=${CLRnormal} ;;
    esac
    echo -e "\t${CLRnormal}Name: ${CLRtitle}${InstanceName}${CLRnormal}\t\tID: ${CLRtitle}${InstanceId}${CLRnormal}\t\tStatus: ${CLRstatus}${InstanceStatus}"
    echo -e "\t${CLRnormal}AMI: ${CLRtitle}${ImageAMI}${CLRnormal}\t${CLRnormal}AMI Name: ${CLRtitle}${ImageDescription[0]}${CLRnormal}\n"
  done

else
  echo -e "${CLRerror}No ${OutputText} found${CLRnormal}"
fi

exit 0
