#!/usr/bin/env bash

# aws-info - display info for specified EC2 instance
#
#    from: aws-quick-cli
#          https://github.com/robertpeteuil/aws-quick-cli
#
#  Author: Robert Peteuil   @RobertPeteuil
#

scriptname="aws-info"
scriptbuildnum="0.9.5"
scriptbuilddate="2017-03-25"

# source aws-quick-cli init files to add color and display_ver function
. aws-quick-cli-init.sh

############################################################
###   FUNCTIONS

display_help_text() {
  display_ver
  echo
  echo -e "${CLRtitle}lists status and information for AWS EC2 instance specified"
  echo
  echo -e "${CLRtitle}USAGE: ${CLRnormal}${scriptname} ${CLRtitle2}instance-name${CLRnormal} | ${CLRtitle2}-i InstanceId [OPTIONS]\n"
  echo -e "${CLRtitle}One Required Identifier:${CLRnormal}"
  echo -e "${CLRtitle2} instance-name\t${CLRnormal}: name assigned to the EC2 instance"
  echo -e "${CLRtitle2} -i InstanceId\t${CLRnormal}: InstanceId of the EC2 instance"
  echo
  echo -e "${CLRtitle}\tOPTIONS:${CLRnormal}"
  echo -e "${CLRtitle2}            -d\t${CLRnormal}: debug mode"
  echo -e "${CLRtitle2}            -V\t${CLRnormal}: display version info"
  echo -e "${CLRtitle2}            -h\t${CLRnormal}: display help info"
  echo
  exit 0
}

######################################################################
###   EXECUTION STARTS HERE

InstanceName="$1" # pre-assign InstanceName, it may be changed later if -i specified
[[ -z $InstanceName ]] && echo -e "${CLRerror}Error:${CLRnormal} No parameters specified\n" && display_help_text

# Parse COMMAND-TAIL Arguments
for arg in "$@"; do
  case "$arg" in
    -i)                 shift; InstanceId="$1"; shift ;;
    -h|--help)          display_help_text ;;
    -V|--version)       display_ver; exit ;;
    -d|--debug)         debugmode=true; shift ;;
  esac
done

[[ "$debugmode" ]] && echo -e "Param1: $InstanceName \t InstanceId: $InstanceId"

if [[ -z ${InstanceId} ]]; then    # InstanceId not set in command tail as "-i" not used
  InstanceId=($(aws ec2 describe-instances --filters "Name=tag:Name,Values=${InstanceName}" --query 'Reservations[*].Instances[].[InstanceId]' --output text))
else      # InstanceId is set from command tail use of "-i"
  InstanceName=$(aws ec2 describe-instances --instance-ids "${InstanceId}" --query 'Reservations[*].Instances[].[Tags[?Key==`Name`].Value]' --output text)
fi

InstanceStatus=($(aws ec2 describe-instances --instance-ids "${InstanceId}" --query 'Reservations[*].Instances[].State[].[Name]' --output text))

ImageAMI=($(aws ec2 describe-instances --instance-ids "${InstanceId}" --query 'Reservations[*].Instances[].[ImageId]' --output text))

ImageDescription=($(aws ec2 describe-images --image-ids "${ImageAMI}" --query 'Images[*].{Name:Name}' --output text))

case ${InstanceStatus} in
  running)    CLRstatus=${CLRsuccess} ;;
  stopped)    CLRstatus=${CLRerror} ;;
  stopping)   CLRstatus=${CLRwarning} ;;
  pending)    CLRstatus=${CLRwarning} ;;
  starting)   CLRstatus=${CLRwarning} ;;
  *)          CLRstatus=${CLRnormal} ;;
esac

echo
echo -e "\t${CLRnormal}Name: ${CLRtitle}${InstanceName}${CLRnormal}\t\tID: ${CLRtitle}${InstanceId}${CLRnormal}\t\tStatus: ${CLRstatus}${InstanceStatus}"
echo -e "\t${CLRnormal}AMI: ${CLRtitle}${ImageAMI}${CLRnormal}\t${CLRnormal}AMI Name: ${CLRtitle}${ImageDescription}${CLRnormal}\n"

exit 0
