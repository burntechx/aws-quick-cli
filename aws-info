#!/usr/bin/env bash

# aws-info - display info for specified EC2 instance
#
#    from: Easy-EC2 Utilities
#          https://github.com/robertpeteuil/Easy-EC2
#
#  Author: Robert Peteuil   @RobertPeteuil
#

scriptname="aws-info"
scriptbuildnum="0.9.2"
scriptbuilddate="2017-03-13"

############################################################
###     PRE-EXECUTION

# TURN ON COLOR IF POSSIBLE, SET THEME
if test -t 1; then            # check if stdout is a terminal
  ncolors=$(tput colors)    # see if it supports colors
  if test -n "$ncolors" && test $ncolors -ge 8; then
  # Set Colors
    bold="$(tput bold)"
    underline="$(tput smul)"
    standout="$(tput smso)"
    normal="$(tput sgr0)"
    black="$(tput setaf 0)"
    red="$(tput setaf 1)"
    green="$(tput setaf 2)"
    yellow="$(tput setaf 3)"
    blue="$(tput setaf 4)"
    magenta="$(tput setaf 5)"
    cyan="$(tput setaf 6)"
    white="$(tput setaf 7)"
  # Set Color Theme - used by echo statements
    CLRnormal=${bold}${white}
    CLRheading=${bold}${green}
    CLRheading2=${bold}${blue}
    CLRtitle=${bold}${cyan}
    CLRtitle2=${bold}${yellow}
    CLRsuccess=${bold}${green}
    CLRwarning=${bold}${yellow}
    CLRerror=${bold}${red}
  fi
fi

############################################################
###   FUNCTIONS

display_ver() {
  echo -e "${CLRheading}${scriptname}${CLRnormal}  ver ${CLRtitle}${scriptbuildnum} ${CLRnormal}- ${CLRtitle}${scriptbuilddate}${CLRnormal}"
}

display_help_text() {
  display_ver
  echo
  echo -e "${CLRtitle}lists status and information for AWS EC2 instance specified"
  echo
  echo -e "${CLRtitle}USAGE: ${CLRnormal}${scriptname} ${CLRtitle2}[instance-name]${CLRnormal} | ${CLRtitle2}[-i InstanceId]\n"
  echo -e "${CLRtitle}One Identifier Required:${CLRnormal}"
  echo -e "${CLRtitle2} instance-name\t${CLRnormal}: name assigned to the EC2 instance"
  echo -e "${CLRtitle2} -i InstanceId\t${CLRnormal}: InstanceId of the EC2 instance"
  echo
  exit 0
}

######################################################################
###   EXECUTION STARTS HERE

InstanceName="$1" # pre-assign InstanceName, it may be changed later if -i specified
[[ -z $InstanceName ]] && echo -e "${CLRerror}Error:${CLRnormal} No parameters specified\n" && display_help_text

# Parse COMMAND-TAIL Arguments
for arg in "$@"; do
  case "$arg" in
    -i)                 shift; InstanceId="$1"; shift ;;
    -h|--help)          display_help_text ;;
    -V|--version)       display_ver; exit ;;
    -d|--debug)         debugmode=true; shift ;;
  esac
done

[[ "$debugmode" ]] && echo -e "Param1: $InstanceName \t InstanceId: $InstanceId"

if [[ -z ${InstanceId} ]]; then    # InstanceId not set in command tail as "-i" not used
  InstanceId=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${InstanceName}" --query 'Reservations[*].Instances[].[InstanceId]' --output text)
else      # InstanceId is set from command tail use of "-i"
  InstanceName=($(aws ec2 describe-instances --instance-ids "${InstanceId}" --query 'Reservations[*].Instances[].[Tags[?Key==`Name`].Value]' --output text))
fi

InstanceStatus=$(aws ec2 describe-instances --instance-ids "${InstanceId}" --query 'Reservations[*].Instances[].State[].[Name]' --output text)

ImageAMI=($(aws ec2 describe-instances --instance-ids "${InstanceId}" --query 'Reservations[*].Instances[].[ImageId]' --output text))

ImageDescription=($(aws ec2 describe-images --image-ids ${ImageAMI} --query 'Images[*].{Name:Name}' --output text))

case ${InstanceStatus} in
  running)    CLRstatus=${CLRsuccess} ;;
  stopped)    CLRstatus=${CLRerror} ;;
  stopping)   CLRstatus=${CLRwarning} ;;
  pending)    CLRstatus=${CLRwarning} ;;
  starting)   CLRstatus=${CLRwarning} ;;
  *)          CLRstatus=${CLRnormal} ;;
esac

echo
echo -e "\t${CLRnormal}Name: ${CLRtitle}${InstanceName}${CLRnormal}     ID: ${CLRtitle}${InstanceId}${CLRnormal}     Status: ${CLRstatus}${InstanceStatus}"
echo -e "\t${CLRnormal}AMI: ${CLRtitle}${ImageAMI}${CLRnormal}     ${CLRnormal}AMI Name: ${CLRtitle}${ImageDescription}${CLRnormal}\n"

exit 0
