#!/usr/bin/env bash

# aws-list - lists info for EC2 instances
#
#    from: Easy-EC2 Utilities
#          https://github.com/robertpeteuil/Easy-EC2
#
#  Author: Robert Peteuil   @RobertPeteuil
#

scriptname="aws-list"
scriptbuildnum="0.9.2"
scriptbuilddate="2017-03-13"

############################################################
###     PRE-EXECUTION

# TURN ON COLOR IF POSSIBLE, SET THEME
if test -t 1; then            # check if stdout is a terminal
  ncolors=$(tput colors)    # see if it supports colors
  if test -n "$ncolors" && test $ncolors -ge 8; then
  # Set Colors
    bold="$(tput bold)"
    underline="$(tput smul)"
    standout="$(tput smso)"
    normal="$(tput sgr0)"
    black="$(tput setaf 0)"
    red="$(tput setaf 1)"
    green="$(tput setaf 2)"
    yellow="$(tput setaf 3)"
    blue="$(tput setaf 4)"
    magenta="$(tput setaf 5)"
    cyan="$(tput setaf 6)"
    white="$(tput setaf 7)"
  # Set Color Theme - used by echo statements
    CLRnormal=${bold}${white}
    CLRheading=${bold}${green}
    CLRheading2=${bold}${blue}
    CLRtitle=${bold}${cyan}
    CLRtitle2=${bold}${yellow}
    CLRsuccess=${bold}${green}
    CLRwarning=${bold}${yellow}
    CLRerror=${bold}${red}
  fi
fi

############################################################
### VAR INITS

if [ -n "$AWS_DEFAULT_REGION" ]; then
  OutputAddendum=" in ${CLRheading2}${AWS_DEFAULT_REGION}${CLRnormal}"
fi

############################################################
###   FUNCTIONS

display_ver() {
  echo -e "${CLRheading}${scriptname}${CLRnormal}  ver ${CLRtitle}${scriptbuildnum} ${CLRnormal}- ${CLRtitle}${scriptbuilddate}${CLRnormal}"
}

display_help_text() {
  display_ver
  echo
  echo -e "${CLRtitle}lists status and information for AWS EC2 instances"
  echo
  echo -e "${CLRtitle}USAGE: ${CLRnormal}${scriptname} ${CLRtitle2}[OPTIONS]\n"
  echo -e "${CLRtitle}OPTIONS:${CLRnormal}"
  echo -e "${CLRtitle2} (none)\t${CLRnormal}: list status of all instances"
  echo -e "${CLRtitle2}stopped\t${CLRnormal}: list status of stopped instances"
  echo -e "${CLRtitle2}running\t${CLRnormal}: list status of running instances"
  echo
  exit 0
}

######################################################################
###   EXECUTION STARTS HERE

if [ "$1" = "" ]; then
  filters=""
  OutputText="EC2 Instances"
fi

# Parse COMMAND-TAIL Arguments
for arg in "$@"; do
  case "$arg" in
    offline|stopped)
          filters="--filters Name=instance-state-name,Values=stopped"
          OutputText="Stopped EC2 Instances"
          shift ;;
    online|running)
          filters="--filters Name=instance-state-name,Values=running"
          OutputText="Running EC2 Instances"
          shift ;;
    -h|--help)          display_help_text; exit ;;
    -V|--version)       display_ver; exit ;;
    -d|--debug)         debugmode=true; shift ;;
    *)                  echo -e "invalid paramter\n";display_help_text; exit 1;;
  esac
done

# Get all instance data items
InstanceData=($(aws ec2 describe-instances ${filters} --query 'Reservations[*].Instances[].[InstanceId,ImageId,State.Name,Tags[?Key==`Name`].Value]' --output text))

numberDataRecords=4
numberInstances=$(( ${#InstanceData[@]} / numberDataRecords ))

[[ "$debugmode" ]] && echo -e "# instances found: $numberInstances \t total items collected: ${#InstanceData[@]}\t items per instance: $numberDataRecords\t "

if [ ${#InstanceData[@]} -ne 0 ]; then
  echo -e "\n${OutputText}${OutputAddendum}:\n"

  for (( j=0; j<${#InstanceData[@]}; j=j+$numberDataRecords )); do

    InstanceId=${InstanceData[$j]}
    ImageAMI=${InstanceData[$j+1]}
    InstanceStatus=${InstanceData[$j+2]}
    InstanceName=${InstanceData[$j+3]}

    ImageDescription=($(aws ec2 describe-images --image-ids "${ImageAMI}" --query 'Images[*].{Name:Name}' --output text))

    case ${InstanceStatus} in
      running)    CLRstatus=${CLRsuccess} ;;
      stopped)    CLRstatus=${CLRerror} ;;
      stopping)   CLRstatus=${CLRwarning} ;;
      pending)    CLRstatus=${CLRwarning} ;;
      starting)   CLRstatus=${CLRwarning} ;;
      *)          CLRstatus=${CLRnormal} ;;
    esac
    echo -e "\t${CLRnormal}Name: ${CLRtitle}${InstanceName}${CLRnormal}     ID: ${CLRtitle}${InstanceId}${CLRnormal}     Status: ${CLRstatus}${InstanceStatus}"
    echo -e "\t${CLRnormal}AMI: ${CLRtitle}${ImageAMI}${CLRnormal}     ${CLRnormal}AMI Name: ${CLRtitle}${ImageDescription}${CLRnormal}\n"

  done

else
  echo -e "${CLRerror}No ${OutputText} found${CLRnormal}"
fi

exit 0
